<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.unsoed.informatikamobile&quot;&#10;    compileSdk = 36&#10;&#10;    viewBinding {&#10;        enable = true&#10;    }&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.unsoed.informatikamobile&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.androidx.activity)&#10;    implementation(libs.androidx.constraintlayout)&#10;    implementation(libs.constraintlayout)&#10;    implementation(&quot;androidx.core:core-ktx:1.13.1&quot;)&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;&#10;    implementation(&quot;com.squareup.retrofit2:retrofit:3.0.0&quot;)&#10;    implementation(&quot;com.squareup.retrofit2:converter-gson:3.0.0&quot;)&#10;    implementation(&quot;com.github.bumtech.glide:glide:5.0.5&quot;)&#10;&#10;    implementation(libs.androidx.lifecycle.viewmodel.ktx)&#10;    implementation(libs.androidx.activity.ktx)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    id(&quot;kotlin-kapt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.unsoed.informatikamobile&quot;&#10;    compileSdk = 36&#10;&#10;    viewBinding {&#10;        enable = true&#10;    }&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.unsoed.informatikamobile&quot;&#10;        minSdk = 24&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.androidx.activity)&#10;    implementation(libs.androidx.constraintlayout)&#10;    implementation(libs.constraintlayout)&#10;    implementation(&quot;androidx.core:core-ktx:1.13.1&quot;)&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;&#10;    implementation(&quot;com.squareup.retrofit2:retrofit:3.0.0&quot;)&#10;    implementation(&quot;com.squareup.retrofit2:converter-gson:3.0.0&quot;)&#10;    implementation(&quot;com.github.bumptech.glide:glide:4.16.0&quot;)&#10;    kapt(&quot;com.github.bumptech.glide:compiler:4.16.0&quot;)&#10;&#10;    implementation(libs.androidx.lifecycle.viewmodel.ktx)&#10;    implementation(libs.androidx.activity.ktx)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/unsoed/informatikamobile/ui/fragment/BookDetailFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/unsoed/informatikamobile/ui/fragment/BookDetailFragment.kt" />
              <option name="originalContent" value="package com.unsoed.informatikamobile.ui.fragment&#10;&#10;import android.os.Bundle&#10;import androidx.fragment.app.Fragment&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Toast&#10;import com.google.android.material.bottomsheet.BottomSheetDialogFragment&#10;import com.unsoed.informatikamobile.R&#10;import com.unsoed.informatikamobile.databinding.FragmentBookDetailBinding&#10;&#10;// TODO: Rename parameter arguments, choose names that match&#10;// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER&#10;&#10;/**&#10; * A simple [Fragment] subclass.&#10; * Use the [BookDetailFragment.newInstance] factory method to&#10; * create an instance of this fragment.&#10; */&#10;class BookDetailFragment : BottomSheetDialogFragment () {&#10;    // TODO: Rename and change types of parameters&#10;    private var param1: String? = null&#10;    private var param2: String? = null&#10;&#10;    class BookDetailFragment(&#10;        private val title: String,&#10;        private val author: String,&#10;        private val year: String,&#10;        private val coverId: Int) : BottomSheetDialogFragment() {&#10;        private var _binding: FragmentBookDetailBinding? = null&#10;        private val binding get() = _binding!!&#10;&#10;        override fun getTheme(): Int = R.style.ThemeOverlay_App_BottomSheetDialog&#10;    }&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        _binding = FragmentBookDetailBinding.inflate(inflater, container, false)&#10;        return binding.root&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null&#10;    }&#10;&#10;    private fun loadData() {&#10;        Toast.makeText(context, &quot;$coverId&quot;, Toast.LENGTH_SHORT).show()&#10;        binding.textViewTitle.text = title&#10;        binding.textViewAuthor.text = author&#10;        binding.textViewYear.text = year&#10;&#10;        if (coverId != 0) {&#10;            val url = &quot;https://covers.opeLibrary.org/b/id/$coverId-M.jpg&quot;&#10;            Glide.with(this)&#10;                .load(url)&#10;                .into(binding.imageViewCover)&#10;        } else {&#10;            binding.imageViewCover.setImageResource(&#10;                R.drawable.book_not_found&#10;            )&#10;        }&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        loadData()&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.unsoed.informatikamobile.ui.fragment&#10;&#10;import android.os.Bundle&#10;import androidx.fragment.app.Fragment&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Toast&#10;import com.bumptech.glide.Glide&#10;import com.google.android.material.bottomsheet.BottomSheetDialogFragment&#10;import com.unsoed.informatikamobile.R&#10;import com.unsoed.informatikamobile.databinding.FragmentBookDetailBinding&#10;&#10;class BookDetailFragment(&#10;    private val title: String,&#10;    private val author: String,&#10;    private val year: String,&#10;    private val coverId: Int&#10;) : BottomSheetDialogFragment() {&#10;    &#10;    private var _binding: FragmentBookDetailBinding? = null&#10;    private val binding get() = _binding!!&#10;&#10;    override fun getTheme(): Int = R.style.ThemeOverlay_App_BottomSheetDialog&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        _binding = FragmentBookDetailBinding.inflate(inflater, container, false)&#10;        return binding.root&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null&#10;    }&#10;&#10;    private fun loadData() {&#10;        Toast.makeText(context, &quot;$coverId&quot;, Toast.LENGTH_SHORT).show()&#10;        binding.textViewTitle.text = title&#10;        binding.textViewAuthor.text = author&#10;        binding.textViewYear.text = year&#10;&#10;        if (coverId != 0) {&#10;            val url = &quot;https://covers.openlibrary.org/b/id/$coverId-M.jpg&quot;&#10;            Glide.with(this)&#10;                .load(url)&#10;                .into(binding.imageViewCover)&#10;        } else {&#10;            binding.imageViewCover.setImageResource(&#10;                R.drawable.book_not_found&#10;            )&#10;        }&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        loadData()&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>